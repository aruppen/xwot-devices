#
# Generated by xwot compiler.
#
# Flask xwot application.
#
# Type:       xwot:SensorResource
# Resource:   HumidityResource
# Path:       /dht22/humidity
#

from flask import request
from xwot_app import app
from xwot.util.flask import make_response
from xwot.model import Sensor, Model
import json
from Arduino_Monitor import SerialData as DataGen

data = DataGen()

class DHT_Humidity(Sensor, Model):
    __mutable_props__ = []
    __expose__ = __mutable_props__ + ["name", "measurement", "unit", "precision", "backLink"]

    def __init__(self):
        super(DHT_Humidity, self).__init__()
        self.add_link("backLink")
        self.add_type("xwot-ext:HumiditySensor")

    @property
    def resource_path(self):
        return "/dht22/humidity"

    @property
    def name(self):
        return "Humidity"

    @property
    def measurement(self):
        mm = data.next()
        json_data = json.loads(mm)
        return json_data["humidity"]

    @property
    def unit(self):
        return "Percent"

    @property
    def precision(self):
        return "2"

    @property
    def backLink(self):
        return "/dht22"

    def handle_update(self, dic):
        pass


dht_humidity = DHT_Humidity()

#
# GET '/dht22/humidity'
#
@app.route('/dht22/humidity', methods=['GET'])
def handle_dht22_humidity_GET():
    return make_response(dht_humidity)

