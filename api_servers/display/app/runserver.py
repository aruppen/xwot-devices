#
# Generated by xwot compiler.
#
# Klein xwot application.
#

import xwot_app
from xwot_app import app

import yadp
yadp.debug()

from yadp.semantic import client
from twisted.internet import task, reactor
from yadp import service
from yadp.device import Device

device = Device(urn='urn:xwot:Display', location=xwot_app.http_addr, descriptions=[xwot_app.yadp_description])

service = service()
service.register(device=device, passive=True)


def find_sensors(_client):
    triples = _client.sparql_query("""
    PREFIX xwot: <http://xwot.lexruee.ch/vocab/core#>
    PREFIX xwot-ext: <http://xwot.lexruee.ch/vocab/core-ext#>
    PREFIX schema: <http://schema.org/>

    SELECT ?device ?temperature ?humidity WHERE {
        ?device a xwot:Device.
        ?device xwot-ext:roomAddress ?room.

        ?device schema:knows ?temperature.
        ?device schema:knows ?humidity.

        ?temperature a xwot-ext:TemperatureSensor.
        ?humidity a xwot-ext:HumiditySensor.

        FILTER(?room = "A410")
    }""")

    triples = [map(str, triple) for triple in triples]
    for triple in triples:
        sensor_device_url, temperature_url, humidity_url = triple
        if xwot_app.resources['sensor_device'] is None:
            xwot_app.resources['sensor_device'] = sensor_device_url
            xwot_app.resources['temperature_sensor'] = temperature_url
            xwot_app.resources['humidity_sensor'] = humidity_url

    if len(triples) == 0:
        xwot_app.resources['sensor_device'] = None
        xwot_app.resources['temperature_sensor'] = None
        xwot_app.resources['humidity_sensor'] = None

    return len(triples) != 0

once = False
client = client()

def loop(_client, _service, _device):
    global once
    send_update = find_sensors(_client)
    if send_update and once is False:
        ##_service.update(_device)
        reactor.callLater(5.0, _service.update, _device)
        once = True

    print xwot_app.resources

_loop = task.LoopingCall(loop, client, service, device)
_loop.start(5.0)
client.browse()

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=xwot_app.port)

