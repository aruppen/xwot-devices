#
# Generated by xwot compiler.
#
# Klein xwot application.
#
# Type:       xwot:Resource
# Resource:   WeatherstationResource
# Path:       /weatherstation
#

import geocoder
from twisted.internet.task import LoopingCall
from xwot_app import app
from . import weatherstation, gps
from xwot.util import deserialize
from xwot.util.klein import make_response


def update():
    gps_cord = [gps.latitude, gps.longitude]
    if gps.found:
        try:
            g = geocoder.google(gps_cord, method='reverse')
            weatherstation.postalCode = g.postal
            weatherstation.streetAddress = g.street_long + ' ' + g.housenumber
            weatherstation.addressLocality = g.state_long + ', ' + g.country_long
        except:
            pass

update_fun = LoopingCall(update)
update_fun.start(60*60)  # every hour

#
# GET '/weatherstation'
#
@app.route('/weatherstation', methods=['GET'])
def handle_weatherstation_GET(request):
    return make_response(weatherstation, request)

#
# PUT '/weatherstation'
#
@app.route('/weatherstation', methods=['PUT'])
def handle_weatherstation_PUT(request):
    data = request.content.read()
    content_type = request.getHeader('Content-Type')
    dic = deserialize(data, content_type)
    status = weatherstation.update(dic, content_type)

    return make_response(weatherstation, request=request, status=status)


