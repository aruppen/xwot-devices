#
# Generated by xwot compiler.
#
# Klein xwot application.
#
# Type:       xwot:ContextResource
# Resource:   LockResource
# Path:       /door/lock
#

from xwot.util.klein import make_response
from xwot.util import deserialize
from xwot.device.door import Lock
from xwot_app import app
from twisted.internet import task, reactor
from xwot.util.klein import cors

lock = Lock(name='Door lock')

#
# GET '/door/lock'
#
@app.route('/door/lock', methods=['GET'])
def handle_door_lock_GET(request):
    cors(request, methods=['GET', 'PUT'])
    return make_response(lock, request)

#
# PUT '/door/lock'
#
@app.route('/door/lock', methods=['PUT'])
def handle_door_lock_PUT(request):
    cors(request, methods=['GET', 'PUT'])
    data = request.content.read()
    content_type = request.getHeader('Content-Type')
    dic = deserialize(data, content_type)
    task.deferLater(reactor, 0.2, lock.update, dic, content_type)
    deferred_response = task.deferLater(reactor, 0, make_response, lock, request)

    return deferred_response

#
# OPTIONS '/door/lock'
#
@app.route('/door/lock', methods=['OPTIONS'])
def handle_door_lock_OPTIONS(request):
    cors(request, methods=['GET', 'PUT', 'OPTIONS'])
    request.setHeader('Allow', 'GET, PUT, OPTIONS')